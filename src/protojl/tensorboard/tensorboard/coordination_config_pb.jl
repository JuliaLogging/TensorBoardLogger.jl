# Autogenerated using ProtoBuf.jl v1.0.11 on 2023-08-09T10:18:18.246
# original file: proto/tensorboard/tensorboard/coordination_config.proto (proto3 syntax)

import ProtoBuf as PB
using ProtoBuf: OneOf
using ProtoBuf.EnumX: @enumx

export CoordinatedJob, CoordinationServiceConfig

struct CoordinatedJob
    name::String
    num_tasks::Int32
end
PB.default_values(::Type{CoordinatedJob}) = (;name = "", num_tasks = zero(Int32))
PB.field_numbers(::Type{CoordinatedJob}) = (;name = 1, num_tasks = 2)

function PB.decode(d::PB.AbstractProtoDecoder, ::Type{<:CoordinatedJob})
    name = ""
    num_tasks = zero(Int32)
    while !PB.message_done(d)
        field_number, wire_type = PB.decode_tag(d)
        if field_number == 1
            name = PB.decode(d, String)
        elseif field_number == 2
            num_tasks = PB.decode(d, Int32)
        else
            PB.skip(d, wire_type)
        end
    end
    return CoordinatedJob(name, num_tasks)
end

function PB.encode(e::PB.AbstractProtoEncoder, x::CoordinatedJob)
    initpos = position(e.io)
    !isempty(x.name) && PB.encode(e, 1, x.name)
    x.num_tasks != zero(Int32) && PB.encode(e, 2, x.num_tasks)
    return position(e.io) - initpos
end
function PB._encoded_size(x::CoordinatedJob)
    encoded_size = 0
    !isempty(x.name) && (encoded_size += PB._encoded_size(x.name, 1))
    x.num_tasks != zero(Int32) && (encoded_size += PB._encoded_size(x.num_tasks, 2))
    return encoded_size
end

struct CoordinationServiceConfig
    service_type::String
    service_leader::String
    enable_health_check::Bool
    cluster_register_timeout_in_ms::Int64
    heartbeat_timeout_in_ms::Int64
    coordinated_job_list::Vector{CoordinatedJob}
    shutdown_barrier_timeout_in_ms::Int64
    agent_destruction_without_shutdown::Bool
    recoverable_jobs::Vector{String}
    allow_new_incarnation_to_reconnect::Bool
end
PB.reserved_fields(::Type{CoordinationServiceConfig}) = (names = String[], numbers = Union{Int,UnitRange{Int}}[6])
PB.default_values(::Type{CoordinationServiceConfig}) = (;service_type = "", service_leader = "", enable_health_check = false, cluster_register_timeout_in_ms = zero(Int64), heartbeat_timeout_in_ms = zero(Int64), coordinated_job_list = Vector{CoordinatedJob}(), shutdown_barrier_timeout_in_ms = zero(Int64), agent_destruction_without_shutdown = false, recoverable_jobs = Vector{String}(), allow_new_incarnation_to_reconnect = false)
PB.field_numbers(::Type{CoordinationServiceConfig}) = (;service_type = 1, service_leader = 2, enable_health_check = 3, cluster_register_timeout_in_ms = 4, heartbeat_timeout_in_ms = 5, coordinated_job_list = 10, shutdown_barrier_timeout_in_ms = 7, agent_destruction_without_shutdown = 8, recoverable_jobs = 9, allow_new_incarnation_to_reconnect = 11)

function PB.decode(d::PB.AbstractProtoDecoder, ::Type{<:CoordinationServiceConfig})
    service_type = ""
    service_leader = ""
    enable_health_check = false
    cluster_register_timeout_in_ms = zero(Int64)
    heartbeat_timeout_in_ms = zero(Int64)
    coordinated_job_list = PB.BufferedVector{CoordinatedJob}()
    shutdown_barrier_timeout_in_ms = zero(Int64)
    agent_destruction_without_shutdown = false
    recoverable_jobs = PB.BufferedVector{String}()
    allow_new_incarnation_to_reconnect = false
    while !PB.message_done(d)
        field_number, wire_type = PB.decode_tag(d)
        if field_number == 1
            service_type = PB.decode(d, String)
        elseif field_number == 2
            service_leader = PB.decode(d, String)
        elseif field_number == 3
            enable_health_check = PB.decode(d, Bool)
        elseif field_number == 4
            cluster_register_timeout_in_ms = PB.decode(d, Int64)
        elseif field_number == 5
            heartbeat_timeout_in_ms = PB.decode(d, Int64)
        elseif field_number == 10
            PB.decode!(d, coordinated_job_list)
        elseif field_number == 7
            shutdown_barrier_timeout_in_ms = PB.decode(d, Int64)
        elseif field_number == 8
            agent_destruction_without_shutdown = PB.decode(d, Bool)
        elseif field_number == 9
            PB.decode!(d, recoverable_jobs)
        elseif field_number == 11
            allow_new_incarnation_to_reconnect = PB.decode(d, Bool)
        else
            PB.skip(d, wire_type)
        end
    end
    return CoordinationServiceConfig(service_type, service_leader, enable_health_check, cluster_register_timeout_in_ms, heartbeat_timeout_in_ms, coordinated_job_list[], shutdown_barrier_timeout_in_ms, agent_destruction_without_shutdown, recoverable_jobs[], allow_new_incarnation_to_reconnect)
end

function PB.encode(e::PB.AbstractProtoEncoder, x::CoordinationServiceConfig)
    initpos = position(e.io)
    !isempty(x.service_type) && PB.encode(e, 1, x.service_type)
    !isempty(x.service_leader) && PB.encode(e, 2, x.service_leader)
    x.enable_health_check != false && PB.encode(e, 3, x.enable_health_check)
    x.cluster_register_timeout_in_ms != zero(Int64) && PB.encode(e, 4, x.cluster_register_timeout_in_ms)
    x.heartbeat_timeout_in_ms != zero(Int64) && PB.encode(e, 5, x.heartbeat_timeout_in_ms)
    !isempty(x.coordinated_job_list) && PB.encode(e, 10, x.coordinated_job_list)
    x.shutdown_barrier_timeout_in_ms != zero(Int64) && PB.encode(e, 7, x.shutdown_barrier_timeout_in_ms)
    x.agent_destruction_without_shutdown != false && PB.encode(e, 8, x.agent_destruction_without_shutdown)
    !isempty(x.recoverable_jobs) && PB.encode(e, 9, x.recoverable_jobs)
    x.allow_new_incarnation_to_reconnect != false && PB.encode(e, 11, x.allow_new_incarnation_to_reconnect)
    return position(e.io) - initpos
end
function PB._encoded_size(x::CoordinationServiceConfig)
    encoded_size = 0
    !isempty(x.service_type) && (encoded_size += PB._encoded_size(x.service_type, 1))
    !isempty(x.service_leader) && (encoded_size += PB._encoded_size(x.service_leader, 2))
    x.enable_health_check != false && (encoded_size += PB._encoded_size(x.enable_health_check, 3))
    x.cluster_register_timeout_in_ms != zero(Int64) && (encoded_size += PB._encoded_size(x.cluster_register_timeout_in_ms, 4))
    x.heartbeat_timeout_in_ms != zero(Int64) && (encoded_size += PB._encoded_size(x.heartbeat_timeout_in_ms, 5))
    !isempty(x.coordinated_job_list) && (encoded_size += PB._encoded_size(x.coordinated_job_list, 10))
    x.shutdown_barrier_timeout_in_ms != zero(Int64) && (encoded_size += PB._encoded_size(x.shutdown_barrier_timeout_in_ms, 7))
    x.agent_destruction_without_shutdown != false && (encoded_size += PB._encoded_size(x.agent_destruction_without_shutdown, 8))
    !isempty(x.recoverable_jobs) && (encoded_size += PB._encoded_size(x.recoverable_jobs, 9))
    x.allow_new_incarnation_to_reconnect != false && (encoded_size += PB._encoded_size(x.allow_new_incarnation_to_reconnect, 11))
    return encoded_size
end